#!/bin/bash

print_format () {
    echo "$1"
}

both () {
    #Install apps with selected package manager
    print_format $'Installing applications \n'
    apps=$(cat apps.json | jq '.both | @sh' | tr -d \',\")
    $PFX $apps; echo
}

final () {
    #Final config
    chsh -s /bin/zsh $USER
}

pacman_case () {
    #Install and use stow (before applications create config files)
    print_format $'First, installing stow.\n'
    $PFX stow exa jq; echo
    ./stow

    both

    apps=$(cat apps.json | jq '.arch | @sh' | tr -d \',\")
    $PFX $apps; echo

    $PFX yay
    aur_apps=$(cat apps.json | jq '.aur | @sh' | tr -d \',\")
    yay -S $(echo $aur_apps | tr "\n" " "); echo

    final
}

apt_case () {
    PPAS=$(echo $"cat ppas.txt" | tr "\n" " ")

    for ppa in $PPAS
    do
    add-apt-repository ppa:$ppa
    done

    both

    final
}

#Config 
case "$USER" in
"root")
    PFX=""
    ;;
*)
    PFX="sudo"
    ;;
esac

C=${1:-"e"}

while [ $C != "p" ] && [ $C != "a" ]
do

    print_format $'Select a package manager to use\n\n(P)acman  (A)pt\n'
    read -p ":: Answer: " C; echo

    C="${C,,}"

    case "$C" in
    "p")
        PFX="$PFX pacman -S"
        pacman_case
        ;;
    "a")
        PFX="$PFX apt install"
        apt_case
        ;;
    *)
        print_format $'\nNot a valid input.\n';
        ;;
    esac
done